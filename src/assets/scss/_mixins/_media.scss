$breakpoints: (
  sm: 640,
  md: 768,
  lg: 1024,
  xl: 1280,
  xxl: 1536,
);

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint) + 'px'}) {
      @content;
    }
  } @else if (is-number($breakpoint)) {
    @media (min-width: $breakpoint + 'px') {
      @content;
    }
  } @else {
    @error "Media query error. Parameter `#{$breakpoint}` is not valid. Expected number.";
  }
}

@mixin respond-max-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint) + 'px'}) {
      @content;
    }
  } @else if (is-number($breakpoint)) {
    @media (max-width: $breakpoint + 'px') {
      @content;
    }
  } @else {
    @error "Media query error. Parameter `#{$breakpoint}` is not valid. Expected number.";
  }
}
